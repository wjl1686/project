<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ejobim.opplat.mapper.TbObjectDataMapper" >
  <resultMap id="BaseResultMap" type="com.ejobim.opplat.domain.TbObjectData" >
    <result column="object_uri" property="objectUri" jdbcType="VARCHAR" />
    <result column="object_type" property="objectType" jdbcType="INTEGER" />
    <result column="data_uri" property="dataUri" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="factory_no" property="factoryNo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    object_uri, object_type, data_uri, create_time, factory_no
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ejobim.opplat.domain.TbObjectDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_object_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ejobim.opplat.domain.TbObjectDataExample" >
    delete from tb_object_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ejobim.opplat.domain.TbObjectData" >
    insert into tb_object_data (object_uri, object_type, data_uri, 
      create_time, factory_no)
    values (#{objectUri,jdbcType=VARCHAR}, #{objectType,jdbcType=INTEGER}, #{dataUri,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{factoryNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ejobim.opplat.domain.TbObjectData" >
    insert into tb_object_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="objectUri != null" >
        object_uri,
      </if>
      <if test="objectType != null" >
        object_type,
      </if>
      <if test="dataUri != null" >
        data_uri,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="factoryNo != null" >
        factory_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="objectUri != null" >
        #{objectUri,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null" >
        #{objectType,jdbcType=INTEGER},
      </if>
      <if test="dataUri != null" >
        #{dataUri,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="factoryNo != null" >
        #{factoryNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ejobim.opplat.domain.TbObjectDataExample" resultType="java.lang.Integer" >
    select count(*) from tb_object_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_object_data
    <set >
      <if test="record.objectUri != null" >
        object_uri = #{record.objectUri,jdbcType=VARCHAR},
      </if>
      <if test="record.objectType != null" >
        object_type = #{record.objectType,jdbcType=INTEGER},
      </if>
      <if test="record.dataUri != null" >
        data_uri = #{record.dataUri,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.factoryNo != null" >
        factory_no = #{record.factoryNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_object_data
    set object_uri = #{record.objectUri,jdbcType=VARCHAR},
      object_type = #{record.objectType,jdbcType=INTEGER},
      data_uri = #{record.dataUri,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      factory_no = #{record.factoryNo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insertBatch"  parameterType="java.util.List">
    insert into tb_object_data (object_uri, object_type, data_uri,factory_no,data_from)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.objectUri,jdbcType=VARCHAR},
      #{item.objectType,jdbcType=INTEGER},
      #{item.dataUri,jdbcType=VARCHAR},
      #{item.factoryNo,jdbcType=VARCHAR},
      #{item.dataFrom,jdbcType=INTEGER})
    </foreach>
  </insert>

  <select id="selectBatchByUri" resultMap="BaseResultMap">
    select * from tb_object_data where object_uri in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="selectDatUriByEquipUri" resultType="java.lang.String">
    select data_uri from tb_object_data where object_uri  = #{equipUri} limit 1;
  </select>

  <select id="selectObjectUriByDataUri" resultType="java.lang.String">
    select object_uri from tb_object_data where data_uri = #{dataUri}
  </select>

  <select id="selectRootObjectUriList" resultType="java.lang.String">
    select uri from tb_syn_object
      where factory_no = #{factoryNo} and parent_uri like  concat(concat('%',#{factoryNo}),'%')
  </select>

  <select id="selectByDataUri" resultMap="BaseResultMap">
    select * from tb_object_data where data_uri = #{record.dataUri,jdbcType=VARCHAR}
  </select>



  <select id="selectBatchByDataUri" resultMap="BaseResultMap">
    select * from tb_object_data where data_uri in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>
</mapper>